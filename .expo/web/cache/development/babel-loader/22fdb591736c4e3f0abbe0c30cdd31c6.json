{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Trabajo\\\\react-native-redux\\\\screens\\\\Task.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { global } from \"../styles/global\";\nimport { didTask, undidTask } from \"../store/taskAction\";\nimport { useDispatch } from \"react-redux\";\n\nvar Task = function Task(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n\n  var goToHome = function goToHome() {\n    navigation.pop();\n  };\n\n  var taskState = route.params.done ? \"Finished\" : \"Unfinished\";\n  var colorState = route.params.done ? \"green\" : \"red\";\n\n  var finishTask = function finishTask(id) {\n    return dispatch(didTask(id));\n  };\n\n  var unfinishTask = function unfinishTask(id) {\n    return dispatch(undidTask(id));\n  };\n\n  return React.createElement(View, {\n    style: global.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginVertical: 20,\n      fontWeight: \"bold\",\n      fontSize: 20,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, route.params.task), React.createElement(Text, {\n    style: {\n      marginVertical: 20,\n      fontWeight: \"bold\",\n      fontSize: 20,\n      textAlign: \"center\",\n      color: colorState\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, taskState), React.createElement(Button, {\n    title: \"Back to Home\",\n    onPress: goToHome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Task;","map":{"version":3,"sources":["C:/Trabajo/react-native-redux/screens/Task.js"],"names":["React","global","didTask","undidTask","useDispatch","Task","navigation","route","dispatch","goToHome","pop","taskState","params","done","colorState","finishTask","id","unfinishTask","container","marginVertical","fontWeight","fontSize","textAlign","task","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT;AACA,SAAQC,OAAR,EAAiBC,SAAjB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACpC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnBH,IAAAA,UAAU,CAACI,GAAX;AACH,GAHD;;AAKA,MAAMC,SAAS,GAAIJ,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAsB,UAAtB,GAAmC,YAArD;AACA,MAAMC,UAAU,GAAIP,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAsB,OAAtB,GAAgC,KAAnD;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAAAC,EAAE;AAAA,WAAIR,QAAQ,CAACN,OAAO,CAACc,EAAD,CAAR,CAAZ;AAAA,GAArB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAD,EAAE;AAAA,WAAIR,QAAQ,CAACL,SAAS,CAACa,EAAD,CAAV,CAAZ;AAAA,GAAvB;;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACiB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAE,EAAjB;AAAqBC,MAAAA,UAAU,EAAE,MAAjC;AAAyCC,MAAAA,QAAQ,EAAE,EAAnD;AAAuDC,MAAAA,SAAS,EAAE;AAAlE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Ff,KAAK,CAACK,MAAN,CAAaW,IAAxG,CADJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTJ,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,UAAU,EAAE,MAFH;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,SAAS,EAAE,QAJF;AAKTE,MAAAA,KAAK,EAAEV;AALE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIH,SANJ,CAHJ,EAWI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEF,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeH,CA7BD;;AA+BA,eAAeJ,IAAf","sourcesContent":["import React from 'react'\nimport { View, Text, Button } from 'react-native'\nimport { global } from '../styles/global'\nimport {didTask, undidTask} from \"../store/taskAction\";\nimport {useDispatch} from \"react-redux\";\n\nconst Task = ({ navigation, route }) => {\n    const dispatch = useDispatch()\n\n    const goToHome = () => {\n        // navigation.goBack()\n        navigation.pop()\n    }\n\n    const taskState = (route.params.done) ? \"Finished\" : \"Unfinished\"\n    const colorState = (route.params.done) ? \"green\" : \"red\"\n\n    const finishTask = id => dispatch(didTask(id))\n    const unfinishTask = id => dispatch(undidTask(id))\n\n    return (\n        <View style={global.container}>\n            <Text style={{marginVertical: 20, fontWeight: \"bold\", fontSize: 20, textAlign: \"center\"}}>{route.params.task}</Text>\n\n            <Text style={{\n                marginVertical: 20,\n                fontWeight: \"bold\",\n                fontSize: 20,\n                textAlign: \"center\",\n                color: colorState\n            }}>{taskState}</Text>\n\n            <Button title=\"Back to Home\" onPress={goToHome} />\n        </View>\n    )\n}\n\nexport default Task\n"]},"metadata":{},"sourceType":"module"}