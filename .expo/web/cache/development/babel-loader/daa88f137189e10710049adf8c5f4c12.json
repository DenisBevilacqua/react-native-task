{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TASK, DELETE_TASK, DID_TASK, UNDID_TASK } from \"./taskTypes\";\nvar initialState = {\n  tasks: [{\n    \"task\": \"HTML I\",\n    \"done\": false,\n    \"id\": \"1\"\n  }, {\n    \"task\": \"CSS\",\n    \"done\": false,\n    \"id\": \"2\"\n  }, {\n    \"task\": \"Responsive design\",\n    \"done\": false,\n    \"id\": \"3\"\n  }, {\n    \"task\": \"JavaScript\",\n    \"done\": false,\n    \"id\": \"4\"\n  }]\n};\n\nvar taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TASK:\n      if (!action.payload) {\n        alert(\"No text\");\n        return;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: [].concat(_toConsumableArray(state.tasks), [{\n          task: action.payload,\n          done: false,\n          id: Math.random().toString()\n        }])\n      });\n\n    case DELETE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.filter(function (item) {\n          return item.id != action.payload;\n        })\n      });\n\n    case DID_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.map(function (item) {\n          if (item.id !== action.payload) {\n            return item;\n          }\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            done: true\n          });\n        })\n      });\n\n    case UNDID_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: state.tasks.map(function (item) {\n          if (item.id !== action.payload) {\n            return item;\n          }\n\n          return _objectSpread(_objectSpread({}, item), {}, {\n            done: false\n          });\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","map":{"version":3,"sources":["C:/Trabajo/react-native-redux/store/taskReducer.js"],"names":["ADD_TASK","DELETE_TASK","DID_TASK","UNDID_TASK","initialState","tasks","taskReducer","state","action","type","payload","alert","task","done","id","Math","random","toString","filter","item","map"],"mappings":";;;;;;;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyCC,UAAzC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAAE,YAAQ,QAAV;AAAoB,YAAQ,KAA5B;AAAmC,UAAM;AAAzC,GADG,EAEH;AAAE,YAAQ,KAAV;AAAiB,YAAQ,KAAzB;AAAgC,UAAM;AAAtC,GAFG,EAGH;AAAE,YAAQ,mBAAV;AAA+B,YAAQ,KAAvC;AAA8C,UAAM;AAApD,GAHG,EAIH;AAAE,YAAQ,YAAV;AAAwB,YAAQ,KAAhC;AAAuC,UAAM;AAA7C,GAJG;AADU,CAArB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AAEI,UAAI,CAACQ,MAAM,CAACE,OAAZ,EAAoB;AAChBC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA;AACH;;AAED,6CACOJ,KADP;AAEIF,QAAAA,KAAK,+BAAME,KAAK,CAACF,KAAZ,IAAmB;AACpBO,UAAAA,IAAI,EAAEJ,MAAM,CAACE,OADO;AAEpBG,UAAAA,IAAI,EAAE,KAFc;AAGpBC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAHgB,SAAnB;AAFT;;AAQJ,SAAKhB,WAAL;AACI,6CACOM,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYa,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACL,EAAL,IAAWN,MAAM,CAACE,OAAtB;AAAA,SAAvB;AAFX;;AAIJ,SAAKR,QAAL;AACI,6CACOK,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,GAAZ,CAAgB,UAACD,IAAD,EAAU;AAC7B,cAAIA,IAAI,CAACL,EAAL,KAAYN,MAAM,CAACE,OAAvB,EAAgC;AAE5B,mBAAOS,IAAP;AACH;;AAGD,iDACOA,IADP;AAEIN,YAAAA,IAAI,EAAE;AAFV;AAIH,SAXM;AAFX;;AAeJ,SAAKV,UAAL;AACI,6CACOI,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,GAAZ,CAAgB,UAACD,IAAD,EAAU;AAC7B,cAAIA,IAAI,CAACL,EAAL,KAAYN,MAAM,CAACE,OAAvB,EAAgC;AAE5B,mBAAOS,IAAP;AACH;;AAGD,iDACOA,IADP;AAEIN,YAAAA,IAAI,EAAE;AAFV;AAIH,SAXM;AAFX;;AAgBJ;AACI,aAAON,KAAP;AAvDR;AAyDH,CA1DD;;AA4DA,eAAeD,WAAf","sourcesContent":["import {ADD_TASK, DELETE_TASK, DID_TASK, UNDID_TASK} from './taskTypes';\n\nconst initialState = {\n    tasks: [\n        { \"task\": \"HTML I\", \"done\": false, \"id\": \"1\" },\n        { \"task\": \"CSS\", \"done\": false, \"id\": \"2\" },\n        { \"task\": \"Responsive design\", \"done\": false, \"id\": \"3\" },\n        { \"task\": \"JavaScript\", \"done\": false, \"id\": \"4\" },\n\n    ]\n}\n\nconst taskReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n\n            if (!action.payload){\n                alert(\"No text\")\n                return\n            }\n\n            return {\n                ...state,\n                tasks: [...state.tasks, {\n                    task: action.payload,\n                    done: false,\n                    id: Math.random().toString()\n                }]\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.filter(item => item.id != action.payload)\n            }\n        case DID_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => {\n                    if (item.id !== action.payload) {\n\n                        return item\n                    }\n\n\n                    return {\n                        ...item,\n                        done: true\n                    }\n                })\n            }\n        case UNDID_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => {\n                    if (item.id !== action.payload) {\n\n                        return item\n                    }\n\n\n                    return {\n                        ...item,\n                        done: false\n                    }\n                })\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default taskReducer\n"]},"metadata":{},"sourceType":"module"}