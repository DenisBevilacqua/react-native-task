{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Trabajo\\\\react-native-redux\\\\screens\\\\Home.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { global } from \"../styles/global\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTask, deleteTask, didTask } from \"../store/taskAction\";\nimport Button from \"../components/Button\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var changeHandler = function changeHandler(val) {\n    setText(val);\n  };\n\n  var submitTask = function submitTask(text) {\n    return dispatch(addTask(text));\n  };\n\n  var removeTask = function removeTask(id) {\n    return dispatch(deleteTask(id));\n  };\n\n  var finishTask = function finishTask(id) {\n    return dispatch(didTask(id));\n  };\n\n  return React.createElement(View, {\n    style: global.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Add new task\",\n    onChangeText: changeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"add task\",\n    color: \"blueviolet\",\n    onPress: function onPress() {\n      return submitTask(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: tasks,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        style: global.item,\n        onPress: function onPress() {\n          return navigation.navigate(\"Task\", item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        onPress: function onPress() {\n          return finishTask(item.id);\n        },\n        style: item.done ? null : {\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, item.done ? React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, item.task) : React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, item.task, \" - Finished\")), React.createElement(Button, {\n        onPress: function onPress() {\n          return removeTask(item.id);\n        },\n        title: \"delete\",\n        backgroundColor: \"#FD785D\",\n        fontSize: 10,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    margin: 10,\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: 'grey'\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Trabajo/react-native-redux/screens/Home.js"],"names":["React","useState","global","useSelector","useDispatch","addTask","deleteTask","didTask","Button","Home","navigation","dispatch","tasks","state","text","setText","changeHandler","val","submitTask","removeTask","id","finishTask","container","styles","input","item","navigate","done","fontWeight","task","StyleSheet","create","margin","paddingVertical","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, FlatList, TouchableOpacity, TextInput, StyleSheet } from 'react-native'\nimport { global } from '../styles/global'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTask, deleteTask, didTask } from '../store/taskAction'\nimport Button from \"../components/Button\";\n\nconst Home = ({ navigation }) => {\n    const dispatch = useDispatch()\n    /**\n     * Obtenemos las tareas desde el store.\n     */\n    const tasks = useSelector(state => state.tasks)\n    const [text, setText] = useState('')\n    const changeHandler = (val) => {\n        setText(val)\n    }\n    const submitTask = (text) => dispatch(addTask(text))\n    const removeTask = id => dispatch(deleteTask(id))\n    const finishTask = id => dispatch(didTask(id))\n\n    return (\n        <View style={global.container}>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Add new task\"\n                onChangeText={changeHandler}\n            />\n            <Button title=\"add task\" color=\"blueviolet\" onPress={() => submitTask(text)} />\n            <FlatList\n                data={tasks}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        style={global.item}\n                        onPress={() => navigation.navigate(\"Task\", item)}>\n                        <Text onPress={() => finishTask(item.id)}\n                            style={item.done ? null : { fontWeight: 'bold' }}>\n                            {(item.done) ?\n                                <Text>\n                                    {item.task}\n                                </Text>\n                                :\n                                <Text>\n                                    {item.task} - Finished\n                                </Text>\n                                }\n                        </Text>\n                        <Button onPress={() => removeTask(item.id)}\n                            title=\"delete\" backgroundColor={\"#FD785D\"} fontSize={10} />\n                    </TouchableOpacity>\n                )}\n            />\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    input: {\n        margin: 10,\n        paddingVertical: 6,\n        borderBottomWidth: 1,\n        borderBottomColor: 'grey'\n\n    }\n})\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}