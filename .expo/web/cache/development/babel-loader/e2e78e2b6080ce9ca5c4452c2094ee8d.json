{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Trabajo\\\\react-native-redux\\\\screens\\\\About.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { global } from \"../styles/global\";\nimport { useSelector } from 'react-redux';\n\nvar About = function About(_ref) {\n  var navigation = _ref.navigation;\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n  var taskDone = tasks.filter(function (item) {\n    return item.done === true;\n  });\n  return React.createElement(View, {\n    style: global.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Task that has done\"), taskDone.length > 0 ? React.createElement(FlatList, {\n    data: taskDone,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        style: global.item,\n        onPress: function onPress() {\n          return navigation.navigate(\"Task\", item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: item.done ? null : {\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }, item.task));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"No data to display\"));\n};\n\nexport default About;","map":{"version":3,"sources":["C:/Trabajo/react-native-redux/screens/About.js"],"names":["React","global","useSelector","About","navigation","tasks","state","taskDone","filter","item","done","container","length","navigate","fontWeight","task"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAAQC,MAAR;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAI5B,MAAMC,KAAK,GAAGH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAAzB;AAIA,MAAME,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,KAAc,IAAlB;AAAA,GAAjB,CAAjB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEMJ,QAAQ,CAACK,MAAT,GAAkB,CAAnB,GAEG,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEL,QADV;AAEI,IAAA,UAAU,EAAE;AAAA,UAAEE,IAAF,SAAEA,IAAF;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAER,MAAM,CAACQ,IADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAML,UAAU,CAACS,QAAX,CAAoB,MAApB,EAA4BJ,IAA5B,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACC,IAAL,GAAY,IAAZ,GAAmB;AAACI,UAAAA,UAAU,EAAE;AAAb,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuDL,IAAI,CAACM,IAA5D,CAHJ,CADQ;AAAA,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,GAaK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfV,CADJ;AAqBH,CA9BD;;AAgCA,eAAeZ,KAAf","sourcesContent":["import React from 'react'\nimport {View, Text, FlatList, TouchableOpacity} from 'react-native'\nimport {global} from '../styles/global'\nimport {useSelector} from 'react-redux'\n\n/**\n * Screen que muestra tareas finalizadas.\n * @param navigation\n * @returns {JSX.Element}\n * @constructor\n */\nconst About = ({navigation}) => {\n    /**\n     * Obtenemos desde el store las tareas\n     */\n    const tasks = useSelector(state => state.tasks)\n    /**\n     * Filtramos las tareas que estÃ¡n finalizadas\n     */\n    const taskDone = tasks.filter(item => item.done === true)\n    return (\n        <View style={global.container}>\n            <Text>Task that has done</Text>\n            {(taskDone.length > 0)\n            ?\n                <FlatList\n                    data={taskDone}\n                    renderItem={({item}) => (\n                        <TouchableOpacity\n                            style={global.item}\n                            onPress={() => navigation.navigate(\"Task\", item)}>\n                            <Text style={item.done ? null : {fontWeight: 'bold'}}>{item.task}</Text>\n\n                        </TouchableOpacity>\n                    )}\n                />\n                : <Text>No data to display</Text>\n            }\n\n        </View>\n    )\n}\n\nexport default About\n"]},"metadata":{},"sourceType":"module"}